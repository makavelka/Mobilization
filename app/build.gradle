apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        applicationId "com.example.mobilization"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        test {
            java {
                exclude '**/integration//**'
            }
        }
    }
}

repositories {
    jcenter {
        url "http://jcenter.bintray.com/"
    }
}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:cardview-v7:23.2.1'
    compile 'com.android.support:recyclerview-v7:23.2.1'
    compile 'com.android.support:design:23.2.1'

    compile 'com.jakewharton:butterknife:7.0.1'

    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'io.reactivex:rxjava:1.0.14'

    compile 'com.squareup.retrofit2:retrofit:2.0.1'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.1'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.1'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
    compile 'com.squareup.picasso:picasso:2.5.2'

    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'

    compile 'com.google.dagger:dagger:2.0'
    apt "com.google.dagger:dagger-compiler:2.0"
    provided 'org.glassfish:javax.annotation:10.0-b28'


    testApt 'com.google.dagger:dagger-compiler:2.0.2'
//    testCompile 'org.robolectric:robolectric:3.0'
    testCompile "org.robolectric:robolectric:3.1-SNAPSHOT"
    testCompile 'junit:junit:4.12'
    testCompile 'com.squareup.okhttp:mockwebserver:2.7.0'
    testCompile 'org.mockito:mockito-core:1.10.19'

    androidTestApt 'com.google.dagger:dagger-compiler:2.0.2'
//    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2'
//    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2') {
//        // Necessary to avoid version conflicts
//        exclude group: 'com.android.support', module: 'appcompat'
//        exclude group: 'com.android.support', module: 'support-v4'
//        exclude group: 'com.android.support', module: 'support-annotations'
//        exclude module: 'recyclerview-v7'
//    }
    androidTestCompile 'com.google.truth:truth:0.25'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.3'
    androidTestCompile 'com.android.support:support-annotations:23.2.1'
    androidTestCompile 'com.squareup.okhttp:mockwebserver:2.7.0'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.mosn:asyncmockwebserver:1.0.0'
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.1.201405082137"
}

def coverageSourceDirs = [
        '../app/src/main/java'
]

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/Lambda$*.class',
                       '**/Lambda.class',
                       '**/*Lambda.class',
                       '**/*Lambda*.class']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testDebugUnitTest.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }

}
