// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter{ url "http://jcenter.bintray.com/"}
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven {
            url "http://repo1.maven.org/maven2"
        }
        maven { url 'https://maven.fabric.io/repo' }
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0-beta3'
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter{ url "http://jcenter.bintray.com/"}
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven {
            url "http://repo1.maven.org/maven2"
        }
        maven { url 'https://maven.fabric.io/repo' }
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.1.201405082137"
}

def coverageSourceDirs = [
        '../app/src/main/java'
]

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/*$ViewBinder*.*',   //DI
                       '**/*_MembersInjector*.*',  //DI
                       '**/*_Factory*.*',  //DI
                       '**/testrx/model/dto/*.*', //dto model
                       '**/testrx/presenter/vo/*.*', //vo model
                       '**/testrx/other/**',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/Lambda$*.class',
                       '**/Lambda.class',
                       '**/*Lambda.class',
                       '**/*Lambda*.class']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testDebugUnitTest.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

